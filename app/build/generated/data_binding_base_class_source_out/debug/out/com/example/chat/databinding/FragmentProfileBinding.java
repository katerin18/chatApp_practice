// Generated by view binder compiler. Do not edit!
package com.example.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final EditText profileLogin;

  @NonNull
  public final EditText profileName;

  @NonNull
  public final TextView titleLogin;

  @NonNull
  public final TextView titleName;

  @NonNull
  public final TextView txtProfile;

  @NonNull
  public final ImageView userIm;

  private FragmentProfileBinding(@NonNull FrameLayout rootView, @NonNull Button buttonExit,
      @NonNull FrameLayout fragmentContainer, @NonNull EditText profileLogin,
      @NonNull EditText profileName, @NonNull TextView titleLogin, @NonNull TextView titleName,
      @NonNull TextView txtProfile, @NonNull ImageView userIm) {
    this.rootView = rootView;
    this.buttonExit = buttonExit;
    this.fragmentContainer = fragmentContainer;
    this.profileLogin = profileLogin;
    this.profileName = profileName;
    this.titleLogin = titleLogin;
    this.titleName = titleName;
    this.txtProfile = txtProfile;
    this.userIm = userIm;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_exit;
      Button buttonExit = ViewBindings.findChildViewById(rootView, id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.profile_login;
      EditText profileLogin = ViewBindings.findChildViewById(rootView, id);
      if (profileLogin == null) {
        break missingId;
      }

      id = R.id.profile_name;
      EditText profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.title_login;
      TextView titleLogin = ViewBindings.findChildViewById(rootView, id);
      if (titleLogin == null) {
        break missingId;
      }

      id = R.id.title_name;
      TextView titleName = ViewBindings.findChildViewById(rootView, id);
      if (titleName == null) {
        break missingId;
      }

      id = R.id.txt_profile;
      TextView txtProfile = ViewBindings.findChildViewById(rootView, id);
      if (txtProfile == null) {
        break missingId;
      }

      id = R.id.user_im;
      ImageView userIm = ViewBindings.findChildViewById(rootView, id);
      if (userIm == null) {
        break missingId;
      }

      return new FragmentProfileBinding((FrameLayout) rootView, buttonExit, fragmentContainer,
          profileLogin, profileName, titleLogin, titleName, txtProfile, userIm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
